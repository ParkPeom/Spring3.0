package com.exe.springJdbcTemplate;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;


// Spring의 jdbc 제어의역전,의존성주입으로 가져옴
public class CustomDAO2 {
	
	private JdbcTemplate jdbcTemplate;
	

	private NamedParameterJdbcTemplate namedJdbcTemplate;
	
	public void setNamedJdbcTemplate(NamedParameterJdbcTemplate namedJdbcTemplate) {
		this.namedJdbcTemplate = namedJdbcTemplate;
	}
	
	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate  = jdbcTemplate;
	}
	
	Connection conn = null;
	
	
	public void insertData(CustomDTO dto) {
		
		StringBuilder sql = new StringBuilder();
		
		sql.append("insert into custom (id,name,age) values(?,?,?)");
		
		// Spring 의 jdbc
		jdbcTemplate.update(sql.toString(),dto.getId(),dto.getName(),dto.getAge());
		
	}
	
	public void deleteData(int id) {
		
		StringBuilder sb = new StringBuilder();
		
		sb.append("delete custom where id=?");
		
		
	}
	
}


